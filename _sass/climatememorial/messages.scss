.Memorial-Message-List{
  display: grid;
  gap: $spacing-unit * 5;
  justify-content: space-around;
  // align-items:center;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  margin: 0;
  $gap-multiply: 5;
  padding: $spacing-unit * $gap-multiply;
  .Memorial-Message{
    list-style: none;
    position: relative;
    $offset: $spacing-unit * $gap-multiply / 2;
    left: calc(var(--random) * #{$offset }  - #{$offset /2});
    top:  calc(var(--random) * #{$offset * -1 } + #{$offset /2});
    --rows: 1;
    --columns: 1;
    @for $i from 1 through 10{
      &.priority-#{$i}{
        @media screen and (min-width: #{$article-width * 1.5}){
          --columns: #{round((1/$i + 1) * 1.2 )};
          --rows: #{round(1/$i + 1) * 1.2};
        }
        @media screen and (min-width: #{$article-width * 2}){
          --columns: #{round((1/$i + 1) * 1.5 )};
        }
      }
    }
    grid-row-end: span var(--rows);
    grid-column-end: span var(--columns);
    @for $i from 1 through length($message-colors){
      $color: nth($message-colors, $i);
      &.color-#{$i}{
        &.Message{
          background-color: rgba($color,0.5);
        }
        blockquote{
          border-left-color: $color;
        }
      }
    }

    &.Message{
      box-shadow: 0 0 $rounding gray;
      padding: $spacing-unit;

      $font-linear-scaler: 10;
      --font-scaler: calc(( (1/var(--priority) + 1) * var(--columns) * #{$font-linear-scaler}) / var(--charactors-root) );
      font-size: calc(min(#{ $base-font-size } * var(--font-scaler),45px));
    }

    &.Quote{

    }
    
  }
}
